---
- name: 系统初始化配置
  hosts: all
  become: yes
  vars:
    required_packages:
      - curl
      - wget
      - git
      - htop
      - iotop
      - nethogs
      - nload
      - sysstat
      - unzip
      - vim
      - net-tools
      - lsof
      - tcpdump
      - iftop
    
  tasks:
    - name: 更新系统包缓存
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"
    
    - name: 安装基础软件包
      package:
        name: "{{ required_packages }}"
        state: present
    
    - name: 配置时区
      timezone:
        name: Asia/Shanghai
    
    - name: 启用NTP时间同步
      systemd:
        name: systemd-timesyncd
        enabled: yes
        state: started
    
    - name: 设置内核参数优化
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - { key: 'vm.swappiness', value: '1' }
        - { key: 'vm.dirty_ratio', value: '15' }
        - { key: 'vm.dirty_background_ratio', value: '5' }
        - { key: 'net.core.somaxconn', value: '32768' }
        - { key: 'net.core.netdev_max_backlog', value: '32768' }
        - { key: 'net.ipv4.tcp_max_syn_backlog', value: '32768' }
        - { key: 'fs.file-max', value: '1000000' }
        - { key: 'net.ipv4.ip_forward', value: '1' }
    
    - name: 设置文件描述符限制
      pam_limits:
        domain: '*'
        limit_type: "{{ item.type }}"
        limit_item: nofile
        value: "{{ item.value }}"
      loop:
        - { type: 'soft', value: '65536' }
        - { type: 'hard', value: '65536' }
    
    - name: 禁用swap
      shell: |
        swapoff -a
        sed -i '/swap/d' /etc/fstab
      when: ansible_swaptotal_mb > 0
    
    - name: 配置SSH安全加固
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backup: yes
      loop:
        - { regexp: '^#PermitRootLogin', line: 'PermitRootLogin no' }
        - { regexp: '^#PasswordAuthentication', line: 'PasswordAuthentication no' }
        - { regexp: '^#MaxAuthTries', line: 'MaxAuthTries 3' }
        - { regexp: '^#ClientAliveInterval', line: 'ClientAliveInterval 300' }
        - { regexp: '^#ClientAliveCountMax', line: 'ClientAliveCountMax 2' }
      notify: restart sshd
    
    - name: 创建性能监控脚本目录
      file:
        path: /opt/monitoring-scripts
        state: directory
        mode: '0755'
    
    - name: 部署性能监控脚本
      template:
        src: "{{ item }}.j2"
        dest: "/opt/monitoring-scripts/{{ item }}"
        mode: '0755'
      loop:
        - system-health-check.sh
        - disk-usage-monitor.sh
        - network-performance-check.sh
    
    - name: 创建systemd服务用于系统监控
      template:
        src: system-monitor.service.j2
        dest: /etc/systemd/system/system-monitor.service
        mode: '0644'
      notify: 
        - reload systemd
        - enable system monitor
    
    - name: 配置rsyslog日志聚合
      blockinfile:
        path: /etc/rsyslog.conf
        block: |
          # 自定义日志配置
          *.info;mail.none;authpriv.none;cron.none /var/log/system.log
          local0.*                                  /var/log/monitoring.log
        backup: yes
      notify: restart rsyslog
    
    - name: 设置logrotate配置
      copy:
        content: |
          /var/log/system.log {
              daily
              rotate 30
              compress
              delaycompress
              missingok
              create 644 root root
          }
          /var/log/monitoring.log {
              daily
              rotate 7
              compress
              delaycompress
              missingok
              create 644 root root
          }
        dest: /etc/logrotate.d/custom-logs
        mode: '0644'

  handlers:
    - name: restart sshd
      systemd:
        name: sshd
        state: restarted
    
    - name: restart rsyslog
      systemd:
        name: rsyslog
        state: restarted
    
    - name: reload systemd
      systemd:
        daemon_reload: yes
    
    - name: enable system monitor
      systemd:
        name: system-monitor
        enabled: yes
        state: started